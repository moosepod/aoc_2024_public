* Day 2 of AOC 2024

https://adventofcode.com/2024/day/2
* Initialize

#+begin_src elisp
    (pyvenv-activate "~/projects/project_venv_312/")
  ; This is needed to make sure python indentation isn't messed up
  (setq org-src-preserve-indentation t)

  ; This is needed on the linux machine for some reason. The activate
  ; above doesn't seem sufficient
  (setq org-babel-python-command "~/projects/project_venv_312/bin/python3")

  ; Stops confirmation when evaling python
  (defun my-org-confirm-babel-evaluate (lang body)
    (not (member lang '("python"))))

  (setq org-confirm-babel-evaluate 'my-org-confirm-babel-evaluate)

  (setq-default indent-tabs-mode nil)

#+end_src

#+RESULTS:

* Star 1

#+begin_src python :results value
from day_2.utils import load

count = 0

for row in load("puzzle.txt"):
    last_delta = 0
    for i in range(1,len(row)):
        delta = row[i-1] - row[i]
        if abs(delta) < 1 or abs(delta) > 3:
            break
        if i > 0 and ((delta > 0 and last_delta < 0) or (delta < 0 and last_delta > 0)):
            break
        last_delta = delta
        if i + 1 == len(row):
            count += 1
    
return count

#+end_src

#+RESULTS:
: 564

* Star 2
#+begin_src python :results value
from day_2.utils import load

rows = load("puzzle.txt")

def check_tuple(d, i1, i2):
    delta = d[i1] - d[i2]
    if abs(delta) < 1 or abs(delta) > 3:
        return False

    if i2 > 0:
        last_delta = d[i2] - d[i2-1]
        if (delta > 0 and last_delta < 0) or (delta < 0 and last_delta > 0):
            return False

    return True

def safe(row):
    for i in range(1,len(row)):
        if not check_tuple(row, i, i-1):
            return False
            
    return True

def safe_r(row, depth=0):
    if depth > 1:
        return False
    
    if safe(row):
        return True

    for i in range(0,len(row)):
        if i == 0:
            tr = row[1:]
        elif i == len(row) - 1:
            tr = row[:-1]
        else:
            tr = row[0:i] + row[i+1:]
        if safe_r(tr, depth=depth+1):
            return True

    return False
        
return sum([1 for row in rows if safe_r(row)])

#+end_src

#+RESULTS:
: 604


